// <auto-generated />
using System;
using ManagementService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagementService.Infrastructure.Migrations
{
    [DbContext(typeof(ManagementContext))]
    [Migration("20221024153345_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ManagementService.Domain.ExhibitionProposals.ExhibitionProposal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("_proposalDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ProposalDate");

                    b.Property<Guid>("_proposalUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProposalUserId");

                    b.HasKey("Id");

                    b.ToTable("ExhibitionProposals", "management");
                });

            modelBuilder.Entity("ManagementService.Domain.Members.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("_firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("_lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<string>("_login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Login");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Members", "management");
                });

            modelBuilder.Entity("ManagementService.Domain.ExhibitionProposals.ExhibitionProposal", b =>
                {
                    b.OwnsOne("ManagementService.Domain.ExhibitionProposals.ExhibitionProposalsDecision", "_decision", b1 =>
                        {
                            b1.Property<Guid>("ExhibitionProposalId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Code")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DecisionCode");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("datetime2")
                                .HasColumnName("DecisionDate");

                            b1.Property<string>("RejectReason")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DecisionRejectReason");

                            b1.Property<Guid?>("UserId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("DecisionUserId");

                            b1.HasKey("ExhibitionProposalId");

                            b1.ToTable("ExhibitionProposals", "management");

                            b1.WithOwner()
                                .HasForeignKey("ExhibitionProposalId");
                        });

                    b.OwnsOne("ManagementService.Domain.ExhibitionProposals.ExhibitionProposalsStatus", "_status", b1 =>
                        {
                            b1.Property<Guid>("ExhibitionProposalId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("StatusCode");

                            b1.HasKey("ExhibitionProposalId");

                            b1.ToTable("ExhibitionProposals", "management");

                            b1.WithOwner()
                                .HasForeignKey("ExhibitionProposalId");
                        });

                    b.Navigation("_decision");

                    b.Navigation("_status");
                });
#pragma warning restore 612, 618
        }
    }
}
